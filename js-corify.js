const fs = require("fs");
require("dotenv").config();

const filePath = "dist/index.js";

const extendsCode = `
var __extends = (this && this.__extends) || (function () {
  var extendStatics = function (d, b) {
    extendStatics = Object.setPrototypeOf ||
      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
    return extendStatics(d, b);
  };
  return function (d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
})();
`;

const errorCode = `
var HapticaExtensionError = (function (_super) {
  __extends(HapticaExtensionError, _super);
  function HapticaExtensionError(code, message) {
    var _this = _super.call(this, message) || this;
    _this.code = code;
    return _this;
  }
  return HapticaExtensionError;
}(Error));
`;

try {
  let content = fs.readFileSync(filePath, "utf8");
  content =
    "// Generated by the haptica-kit npm package: https://github.com/mhayes853/HapticaKit.\n" +
    content;
  content = content.replace(/exports\..*;/gm, "");
  const useStrict = '"use strict";';
  content = content.replace(useStrict, useStrict + extendsCode);
  const symbol = 'Symbol._hapticaPrivate = Symbol("_hapticaPrivate");';
  content = content.replace(symbol, symbol + errorCode);
  content = content.replace(
    'Object.defineProperty(exports, "__esModule", { value: true });',
    "",
  );
  fs.writeFileSync(
    process.env.JS_CORIFY_PATH ?? "dist/js-corified.js",
    content,
  );
  console.log("JSCorified Successfully");
} catch (err) {
  console.error("Error processing file:", err);
}
